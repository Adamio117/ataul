require('dotenv').config();
const express = require('express');
const { createClient } = require('@supabase/supabase-js');
const { Resend } = require('resend');
const fetch = require('node-fetch');

const app = express();
const resend = new Resend(process.env.RESEND_API_KEY);

// Supabase –∫–ª–∏–µ–Ω—Ç
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY,
  { auth: { persistSession: false } }
);

app.use(express.json());

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
app.post('/submit-order', async (req, res) => {
  try {
    const formData = req.body;

    // 1. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Supabase
    const { data, error } = await supabase
      .from('orders')
      .insert([formData])
      .select();

    if (error) throw new Error(`Supabase error: ${error.message}`);

    console.log('Saved to Supabase:', data);

    // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Resend
    const emailRes = await resend.emails.send({
      from: 'notifications@yourdomain.com',
      to: process.env.NOTIFICATION_EMAIL,
      subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
      html: `
        <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</h2>
        <p>–ò–º—è: ${formData.name}</p>
        <p>–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}</p>
        <p>–¢–∏–ø —Å–∞–π—Ç–∞: ${formData.site_type}</p>
      `
    });

    console.log('Email sent:', emailRes);

    // 3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: process.env.TELEGRAM_CHAT_ID,
        text: `üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n–ò–º—è: ${formData.name}\n–¢–µ–ª: ${formData.phone}\n–¢–∏–ø: ${formData.site_type}`
      })
    });

    res.json({ success: true });
    
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ error: error.message });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));